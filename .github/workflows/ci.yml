name: Continuous integration
on: [push]
jobs:
  ci:
    name: Continuous Integration
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2', '8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          tools: castor
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Build
        run: |
          docker compose -f "docker-compose.yml" up -d --build
          composer install
          # Wait for MySQL to be ready
          sleep 10
          # Debug MySQL connection
          php bin/console doctrine:database:drop -f --if-exists --env=test --verbose
          php bin/console doctrine:database:create --env=test --verbose
          php bin/console doctrine:schema:create --env=test --verbose
          # Uncomment if you need to run migrations
          # php bin/console doctrine:migrations:migrate -n --env=test --verbose
          php bin/console doctrine:fixtures:load -n --env=test --verbose
      - name: Show Doctrine Schema
        run: php bin/console doctrine:schema:validate --env=test
      - name: Tests
        run: |
          php bin/phpunit --verbose --debug
      - name: Analysis
        run: php vendor/bin/phpstan